(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    231046,       4724]
NotebookOptionsPosition[    211636,       4264]
NotebookOutlinePosition[    226205,       4573]
CellTagsIndexPosition[    226162,       4570]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "VerificationTest"],

Cell[BoxData[""], "ExpectedOutput"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      ButtonBox[
       TagBox[
        TooltipBox[
         PaneSelectorBox[{False->
          TagBox[GridBox[{
             {
              DynamicBox[FEPrivate`FrontEndResource["MUnitExpressions", "Add"],
               ImageSizeCache->{16., {4., 8.}}], 
              StyleBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Label"],
                ImageSizeCache->{90., {3., 10.}}], "ButtonText",
               StripOnInput->False,
               AdjustmentBoxOptions->{BoxBaselineShift->-50}]}
            },
            AutoDelete->False,
            
            GridBoxAlignment->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Grid"], True->
          TagBox[GridBox[{
             {
              DynamicBox[FEPrivate`FrontEndResource["MUnitExpressions", "Add"],
               ImageSizeCache->{16., {4., 8.}}], 
              StyleBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Label"],
                ImageSizeCache->{90., {3., 10.}}], "ButtonText",
               StripOnInput->False,
               LineColor->RGBColor[0.9059, 0.3451, 0.102],
               FrontFaceColor->RGBColor[0.9059, 0.3451, 0.102],
               BackFaceColor->RGBColor[0.9059, 0.3451, 0.102],
               GraphicsColor->RGBColor[0.9059, 0.3451, 0.102],
               FontColor->RGBColor[0.9059, 0.3451, 0.102]]}
            },
            AutoDelete->False,
            
            GridBoxAlignment->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Grid"]}, Dynamic[
           CurrentValue["MouseOver"]],
          FrameMargins->0,
          ImageSize->Automatic],
         DynamicBox[
          FEPrivate`FrontEndResource["MUnitStrings", "AddMessages-Tooltip"]],
         TooltipDelay->0.5],
        Annotation[#, 
         Dynamic[
          RawBoxes[
           FEPrivate`FrontEndResource[
           "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ],
       Appearance->FEPrivate`FrontEndResource[
        "MUnitExpressions", "ButtonAppearances"],
       ButtonFunction:>
        Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
       Evaluator->Automatic,
       FrameMargins->{{10, 10}, {0, 0}},
       ImageSize->Automatic,
       Method->"Queued"], 
      TagBox[GridBox[{
         {
          ButtonBox[
           TagBox[
            TooltipBox[
             PaneSelectorBox[{False->
              TagBox[GridBox[{
                 {
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "MUnitExpressions", "Add"],
                   ImageSizeCache->{16., {4., 8.}}], 
                  StyleBox[
                   
                   DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    ImageSizeCache->{76., {3., 10.}}], "ButtonText",
                   StripOnInput->False,
                   AdjustmentBoxOptions->{BoxBaselineShift->-50}]}
                },
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"], True->
              TagBox[GridBox[{
                 {
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "MUnitExpressions", "Add"],
                   ImageSizeCache->{16., {4., 8.}}], 
                  StyleBox[
                   
                   DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    ImageSizeCache->{76., {3., 10.}}], "ButtonText",
                   StripOnInput->False,
                   LineColor->RGBColor[0.9059, 0.3451, 0.102],
                   FrontFaceColor->RGBColor[0.9059, 0.3451, 0.102],
                   BackFaceColor->RGBColor[0.9059, 0.3451, 0.102],
                   GraphicsColor->RGBColor[0.9059, 0.3451, 0.102],
                   FontColor->RGBColor[0.9059, 0.3451, 0.102]]}
                },
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]}, Dynamic[
               CurrentValue["MouseOver"]],
              FrameMargins->0,
              ImageSize->Automatic],
             DynamicBox[
              FEPrivate`FrontEndResource[
              "MUnitStrings", "AddOptions-Tooltip"]],
             TooltipDelay->0.5],
            Annotation[#, 
             Dynamic[
              RawBoxes[
               FEPrivate`FrontEndResource[
               "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"], 
          ActionMenuBox[
           ButtonBox["\<\"\"\>",
            
            Appearance->FEPrivate`FrontEndResource[
             "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
            ButtonFunction:>{},
            ContentPadding->False,
            Evaluator->None,
            Method->"Preemptive"], {
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "MemoryConstraint-Label"]]:>
           Block[{$ContextPath}, Needs["MUnit`"]; 
            MUnit`InsertOptionRule["MemoryConstraint"]], 
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "SameTest-Label"]]:>
           Block[{$ContextPath}, Needs["MUnit`"]; 
            MUnit`InsertOptionRule["SameTest"]], 
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "TestID-Label"]]:>
           Block[{$ContextPath}, Needs["MUnit`"]; 
            MUnit`InsertOptionRule["TestID"]], 
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "TimeConstraint-Label"]]:>
           Block[{$ContextPath}, Needs["MUnit`"]; 
            MUnit`InsertOptionRule["TimeConstraint"]]},
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
           FrameMargins->{{0, 0}, {0, 0}},
           Method->"Queued"]}
        },
        AutoDelete->False,
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> Dynamic[
            If[$OperatingSystem === "Windows", {{-0.1}}, {{0}}]], 
          "Rows" -> {{Automatic}}}],
       "Grid"]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
      "Rows" -> {{Automatic}}}],
   "Grid"],
  Alignment->{Left, Center},
  ImageSize->Full]], "BottomCell"],

Cell[CellGroupData[{

Cell["Mathematica\:5b9e\:7528\:5165\:95e8", "Title",
 CellChangeTimes->{{3.668696219202622*^9, 3.6686962469316397`*^9}},
 CellID->158602698],

Cell[CellGroupData[{

Cell["\:6587\:672c/\:6587\:6863", "Section",
 CellChangeTimes->{{3.668696309603321*^9, 3.6686963192913322`*^9}},
 CellID->608339359],

Cell["\:7b14\:8bb0\:672c", "Subsection",
 CellChangeTimes->{3.668696331909257*^9},
 CellID->189963346],

Cell[TextData[{
 StyleBox["\:5355\:5143",
  FontColor->RGBColor[0, 1, 0],
  Background->GrayLevel[0.85]],
 StyleBox["\n",
  Background->GrayLevel[0.85]],
 "\:6837\:5f0f\:8868"
}], "Subsection",
 CellChangeTimes->{{3.66869637424139*^9, 3.668696385094355*^9}, {
  3.66869700001565*^9, 3.668697006475436*^9}},
 CellID->1553256780]
}, Open  ]],

Cell["", "Section",
 CellChangeTimes->{{3.668696415287519*^9, 3.668696424257592*^9}},
 CellID->775488528],

Cell["", "Section",
 CellChangeTimes->{{3.668696646927095*^9, 3.668696670479815*^9}, {
  3.668699437308776*^9, 3.668699437461192*^9}}],

Cell["", "Section",
 CellChangeTimes->{3.668696888335334*^9}],

Cell[CellGroupData[{

Cell["\:5165\:95e8\:65b9\:6cd5", "Section",
 CellChangeTimes->{{3.668697136116601*^9, 3.668697138284803*^9}}],

Cell[CellGroupData[{

Cell["\:81ea\:7531\:8bed\:8a00\:683c\:5f0f\:8f93\:5165", "Subsection",
 CellChangeTimes->{{3.668697169291445*^9, 3.6686971749499493`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "a=1;", Typeset`opts$$ = {
   AppearanceElements -> {
     "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Fast parse", "Fast parse", 1, 0, "Input", "a == 1"}, "ExtrusionOpen" -> 
      True, "Formats" -> {
       "cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"a == 1"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{"a", "\[LongEqual]", "1"}], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Number name", "scanner" -> "Integer", "id" -> 
     "NumberName", "position" -> "200", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["\"one\"", TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Visual representation", "scanner" -> "Integer", "id" -> 
     "VisualRepresentation", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox["\"\[FilledSmallCircle]\"", FontFamily -> "Courier", 
             GrayLevel[0.5], StripOnInput -> False], TraditionalForm]], 
          "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Number line", "scanner" -> "NumberLine", "id" -> 
     "NumberLine", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   PointBox[{1., 0.018000000000000002`}]}, "1.`"], 
                 Annotation[#, 1., "Tooltip"]& ]}, ImageSize -> 300., 
               Axes -> {True, False}, AxesStyle -> {}, 
               PlotRange -> {{0.7, 1.3}, Automatic}, AxesOrigin -> {0, 0}], 
              "\"\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  StyleBox[
                  "Bottom", FontFamily -> "Bitstream Vera Sans", 
                   FontSize -> -1 + Inherited]}], "]"}]& )], 
            TraditionalForm]], "Output", {Background -> None}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Roman numerals", "scanner" -> "Integer", "id" -> 
     "RomanNumerals", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["\"I\"", TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Other historical numerals", "input" -> 
         "RomanNumerals__Other historical numerals"}, {}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Binary form", "scanner" -> "Integer", "id" -> 
     "BaseConversions", "position" -> "600", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"IntegerDigits[1, 2]"}], 
       XMLElement["moutput", {}, {"{1}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             InterpretationBox[
              SubscriptBox["\"1\"", "\"2\""], 1, Editable -> False], 
             BaseForm[#, 2]& ], TraditionalForm]], "Output", {}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput,moutput"}]}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Residues modulo small integers", "scanner" -> 
     "Integer", "id" -> "ResiduesModuloSmallIntegers", "position" -> "700", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Mod[1, Range[2, 9]]"}], 
       XMLElement["moutput", {}, {"{1, 1, 1, 1, 1, 1, 1, 1}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "m", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "2", "3", "4", "5", 
                 "6", "7", "8", "9"}, {
                 TagBox[
                  PaneBox[
                   TemplateBox[{"1", "m"}, "Mod"], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "1", "1", "1", "1", 
                 "1", "1", "1", "1"}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, {Right}}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata,\
numberdata"}]}]}], Typeset`aux1$$ = {True, False, {False}, True}, 
   Typeset`aux2$$ = {True, False, {False}, True}, Typeset`aux3$$ = {
   True, False, {False}, True}, Typeset`aux4$$ = {True, False, {False}, True},
    Typeset`aux5$$ = {True, False, {False}, True}, Typeset`aux6$$ = {
   True, False, {False}, True}, Typeset`aux7$$ = {True, False, {False}, True},
    Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "7", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "0.67", 
    "parsetiming" -> "0.243", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSPa81820c65c4c9828bhh500001chfc2h7b865922b", "host" -> 
    "http://www5b.wolframalpha.com", "server" -> "61", "related" -> 
    "http://www5b.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa81920c65c4c9828bhh500004hbhhd4egifec0df&s=61", "version" -> "2.6", 
    "profile" -> "EnterDoQuery:0.,StartWrap:0.669775"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2016, 4, 4, 2, 37, 39.952746`8.354121612777426}, "Line" -> 4, 
    "SessionID" -> 23541127974624295096}, Typeset`showpods$$ = {1, 2, 3, 4, 5,
    6, 7}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Fast parse", "Fast parse", 1, 0, "Input", "a == 1"}, Typeset`open$$ = 
   True, Typeset`newq$$ = "a=1;"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{560., {694., 16.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; 
     WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 RowBox[{"a", "\[Equal]", "1"}]], "Output",
 CellChangeTimes->{3.6686973436430597`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", " ", "-", " ", 
      RowBox[{"x", "^", "3"}]}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.66869914916177*^9, 3.6686991510189877`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"ArcTan", "[", 
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{"2", " ", "x"}]}], 
     SqrtBox["3"]], "]"}], 
   SqrtBox["3"]], "-", 
  RowBox[{
   FractionBox["1", "3"], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "-", "x"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "6"], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "+", "x", "+", 
     SuperscriptBox["x", "2"]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.668699152606593*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", " ", "-", " ", 
      RowBox[{"x", "^", "3"}]}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.668697740057394*^9, 3.6686978147300386`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
YwP+B6bD4Sc=
     "]], LineBox[CompressedData["
1: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
7kOF/wHythbe
     "]], 
    LineBox[{{1.0020785185043375`, 1.6666278657051692`}, {
     1.0020888006199147`, -1.0806828323403745`}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-5, 5}, {-1.0806828323403745`, 1.6666278657051692`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6686977978160467`*^9, 3.668697818152306*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"1", "-", 
     SuperscriptBox["x", "3"]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
YwP+B6bD4Sc=
     "]], LineBox[CompressedData["
1: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
7kOF/wHythbe
     "]], 
    LineBox[{{1.0020785185043375`, 1.6666278657051692`}, {
     1.0020888006199147`, -1.0806828323403745`}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-5, 5}, {-1.0806828323403745`, 1.6666278657051692`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.668697835531114*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Plot[(1 - x^3)^(-1), {x, -5, 5}]", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Plot", "Plot", 1, 1, "Input", "Plot[(1 - x^3)^(-1), {x, -5, 5}]"}, 
      "ExtrusionOpen" -> True, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
    
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot[(1 - x^3)^(-1), {x, -5, 5}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              GridBox[{{
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"plot\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    TagBox[
                    FractionBox["1", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["x", "3"]}]], HoldForm], 
                    FormBox[
                    TagBox[
                    FormBox[
                    TemplateBox[{
                    StyleBox[
                    RowBox[{"x", "\[LongEqual]", 
                    StyleBox[
                    TagBox[
                    RowBox[{"-", "5"}], HoldForm], 
                    GrayLevel[0], StripOnInput -> False]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False], 
                    TemplateBox[{
                    StyleBox["\" to \"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}, StripOnInput -> False]}, "RowDefault"], 
                    TagBox["5", HoldForm]}, "RowDefault"], TraditionalForm], 
                    Format[#, TraditionalForm]& ], TraditionalForm]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None, None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                  BaselinePosition -> Center]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               ColumnsEqual -> False, RowsEqual -> False, 
               GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
               AllowScriptLevelChange -> False], 
              $CellContext`TagBoxWrapper["Separator" -> " | "]], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Plot", "scanner" -> "Plot", "id" -> "Plot", "position" -> 
     "200", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot[(1 - x^3)^(-1), {x, -5, 5}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max17$$ = 0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`min16$$ = -0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min16$$], \
-0.5, "min"}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max17$$], 
                    0.5, "max"}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$388508$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min16$\
388513$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max17$388514$$ = 
                 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max17$$ = 0.5,
                     CalculateUtilities`GraphicsUtilities`Private`min16$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False}, 
                  "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$388508$$\
, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min16$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min16$388513$\
$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max17$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max17$388514$\
$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    Function[Null, 
                    CalculateUtilities`GraphicsUtilities`Private`post$388496[
                    Plot[
                    SlotSequence[1], AspectRatio -> If[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`aspect], 
                    Automatic, 1/GoldenRatio]]], 
                    HoldAll][(1 - $CellContext`x^3)^(-1), {$CellContext`x, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min16$$], 
                    (
                    Piecewise[{{
                    0. + 5.345224838248487 Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 
                    5.345224838248487 Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min16$$], \
-5], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min16$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max17$$]], 
                    (
                    Piecewise[{{
                    0. + 5.345224838248487 Tan[1.5040801783846716` #], # < 
                    0}}, 0. + 5.345224838248487 Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min16$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max17$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min16$$ + 
                    Rational[1, 100], 
                    CalculateUtilities`GraphicsUtilities`Private`max17$$]], 
                    5]}, ImageSize -> {300.}, PlotStyle -> {{
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]]}, {
                    Directive[
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    AbsoluteThickness[1]]}, {
                    Directive[
                    RGBColor[0.6, 0.5470136627990908, 0.24], 
                    AbsoluteThickness[1]]}, {
                    Directive[
                    RGBColor[0.24, 0.6, 0.33692049419863584`], 
                    AbsoluteThickness[1]]}, {
                    Directive[
                    RGBColor[0.24, 0.5939180232054561, 0.6], 
                    AbsoluteThickness[1]]}}, PerformanceGoal -> "Quality"]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min16$$, \
-0.5, "min"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max17$$, 0.5,
                     "max"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   TrackedSymbols -> True, ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({
                   ReleaseHold[
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`res, 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat}, 
                    CalculateUtilities`GraphicsUtilities`Private`res = 
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    Replace[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, $CellContext`UnitNumberForm, 
                    NumberForm] -> (#& )], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, {
                    PatternTest[
                    BlankSequence[], NumberQ]}] :> 
                    Thread[{CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`t}]], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; If[
                    MatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Condition[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`quants, {
                    Alternatives[
                    BlankSequence[$CellContext`ShortQuantity], 
                    BlankSequence[Quantity]]}], Length[
                    Union[
                    
                    Map[$CellContext`UnitObjectPart, 
                    CalculateUtilities`GraphicsUtilities`Private`quants]]] == 
                    1]], CalculateUtilities`GraphicsUtilities`Private`\
unitformat = $CellContext`ToCDFQuantityFunction[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 2]]; 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat -> 
                    Thread[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 1], 
                    $CellContext`QuantityPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    $CellContext`UnitObjectPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 
                    2]]]}], 
                    CalculateUtilities`GraphicsUtilities`Private`res]]; 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`post$388496] = \
{"ReturnInteractiveTypes" -> False, "Nearest" -> Automatic}; 
                    CalculateUtilities`GraphicsUtilities`Private`post$388496[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[Graphics]], 
                    OptionsPattern[]] := Check[
                    
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`lines, 
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    CalculateUtilities`GraphicsUtilities`Private`gg, 
                    CalculateUtilities`GraphicsUtilities`Private`type, 
                    CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    CalculateUtilities`GraphicsUtilities`Private`range, 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
                     CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = OptionValue["Nearest"]}, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog = 
                    Replace[
                    ReplaceAll[Epilog, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Epilog -> Sequence[]]; Switch[
                    ReplaceAll[{Frame, Axes}, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]], {True, 
                    Blank[]}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Frame; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    ReplaceAll[FrameTicks, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]]], {
                    Blank[], True}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Axes; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    ReplaceAll[Ticks, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]], 
                    Blank[], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    And[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    Frame, 
                    Or[
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`t === None, 
                    CalculateUtilities`GraphicsUtilities`Private`b === 
                    CalculateUtilities`GraphicsUtilities`Private`t]], 
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`r === None, 
                    CalculateUtilities`GraphicsUtilities`Private`l === 
                    CalculateUtilities`GraphicsUtilities`Private`r]]]], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    TrueQ[
                    OptionValue["ReturnInteractiveTypes"]], 
                    Which[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], {}, 
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], {}, True, {
                    "Tooltips", "Coordinates"}], If[
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gg = 
                    Normal[CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = 
                    Partition[
                    Flatten[
                    Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Point[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    Infinity]], 2]; 
                    If[Length[
                    CalculateUtilities`GraphicsUtilities`Private`pts] < 2, 
                    CalculateUtilities`GraphicsUtilities`Private`lines = Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    
                    Blank[Line], Infinity]; 
                    If[CalculateUtilities`GraphicsUtilities`Private`lines === \
{}, 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = Flatten[
                    Cases[
                    CalculateUtilities`GraphicsUtilities`Private`lines, Line[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, Infinity],
                     1]; If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, If[
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[
                    CalculateUtilities`GraphicsUtilities`Private`lines], 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "1D", CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = "2D"]; Null], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "2D"]]; 
                    CalculateUtilities`GraphicsUtilities`Private`range = 
                    Replace[
                    ReplaceAll[PlotRange, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Except[{{
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}, {
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}}] :> {
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]], 
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]]}]; CalculateUtilities`GraphicsUtilities`Private`b = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`b, 
                    First[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]; CalculateUtilities`GraphicsUtilities`Private`l = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]; CalculateUtilities`GraphicsUtilities`Private`\
oldgridlines = ReplaceAll[GridLines, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines = 
                    With[{CalculateUtilities`GraphicsUtilities`Private`gray = 
                    GrayLevel[0.7]}, 
                    Replace[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,\
 {Pattern[CalculateUtilities`GraphicsUtilities`Private`a, {
                    Blank[List], 
                    Blank[List]}] :> Dynamic[
                    Join[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]], {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[List]], Automatic} :> 
                    With[{CalculateUtilities`GraphicsUtilities`Private`\
divisions = {CalculateUtilities`GraphicsUtilities`Private`a, 
                    FindDivisions[
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    7]}}, 
                    Dynamic[
                    Join[
                    CalculateUtilities`GraphicsUtilities`Private`divisions, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]]], Blank[] -> Dynamic[
                    
                    Map[{{#, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]]}]]; If[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    If[CalculateUtilities`GraphicsUtilities`Private`\
neareststyle === "1D", 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 1] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts]}, 
                    CalculateUtilities`GraphicsUtilities`Private`n[
                    Part[#, 1]]& ], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Transpose[Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`pts]/Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts], 
                    CalculateUtilities`GraphicsUtilities`Private`scale = Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]}, CalculateUtilities`GraphicsUtilities`Private`n[#/
                    CalculateUtilities`GraphicsUtilities`Private`scale]& ]], 
                    CalculateUtilities`GraphicsUtilities`Private`left = 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`bottom = 
                    CalculateUtilities`GraphicsUtilities`Private`b}, 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]], 
                    Epilog -> {
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    Dynamic[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = 
                    CalculateUtilities`GraphicsUtilities`Private`nf[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    CalculateUtilities`GraphicsUtilities`Private`bottom[
                    Part[CalculateUtilities`GraphicsUtilities`Private`pt, 1, 
                    1]], 
                    CalculateUtilities`GraphicsUtilities`Private`left[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[Part[
                    CalculateUtilities`GraphicsUtilities`Private`scaled, 1] - 
                    0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[
                    CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]\
, CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`post$388496[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`g; 
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    BlankSequence[Line]]}] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`ordered, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals}, 
                    CalculateUtilities`GraphicsUtilities`Private`ordered = 
                    Apply[And, 
                    Map[OrderedQ[
                    Part[#, 1, All, 1]]& , 
                    Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]; If[
                    Not[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`ordered]], 
                    Return[False]]; 
                    CalculateUtilities`GraphicsUtilities`Private`intervals = 
                    Part[{CalculateUtilities`GraphicsUtilities`Private`l}, 
                    All, 1, {1, -1}, 1]; Length[
                    Apply[
                    Interval, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals]] === 
                    Length[
                    CalculateUtilities`GraphicsUtilities`Private`intervals]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Alternatives[Automatic, FrameTicks]] = {
                    Identity, Identity, Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]]}}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Blank[]] = {None, None, None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Alternatives[Automatic, Ticks]] = {Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`h, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`v, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`h, 
                    CalculateUtilities`GraphicsUtilities`Private`v}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Blank[]] = {None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, NumberForm] -> (#& )], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$, 
                    Blank[]]] := 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[None] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[False] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[True] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[Automatic] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[All] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`func, 
                    Blank[]] -> 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := Replace[
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`f, 
                    Except[None]] :> 
                    Composition[
                    CalculateUtilities`GraphicsUtilities`Private`func, 
                    CalculateUtilities`GraphicsUtilities`Private`f]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[{}] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    Blank[Integer], 
                    Blank[String]}]}]] := Which[
                    Quiet[
                    MatchQ[
                    Apply[SameQ, 
                    Map[Part[
                    DateList[#], 
                    Span[2, All]]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    2}], {1}], {
                    Repeated[True]}]], DateString, 
                    Apply[And, 
                    StringMatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2], NumberString]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Transpose[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    1], 
                    ToExpression[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2]]}]], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    PatternTest[
                    Blank[], NumericQ], 
                    PatternTest[
                    Blank[], NumericQ]}]}]] := Which[
                    MatchQ[
                    Apply[
                    Equal, CalculateUtilities`GraphicsUtilities`Private`ticks,\
 {1}], {
                    Repeated[True]}], Identity, 
                    MatchQ[
                    
                    Apply[# == Log[#2]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {1}], {
                    Repeated[True]}], Exp, 
                    TrueQ[
                    Quiet[
                    Apply[Equal, 
                    Apply[Divide, Transpose[
                    Rest[CalculateUtilities`GraphicsUtilities`Private`ticks]] - 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1]]]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`slope = 
                    Apply[Divide, 
                    Apply[Subtract, 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {-1, 
                    1}]]]}, 
                    SetPrecision[(# - Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 1, 1])
                    /CalculateUtilities`GraphicsUtilities`Private`slope + 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1, 2], 3]& ], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Blank[]] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`type, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`type; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Identity, {
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm, 
                    CalculateUtilities`GraphicsUtilities`Private`acc = 
                    Floor[Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3] - RealExponent[
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]]]}, 
                    CalculateUtilities`GraphicsUtilities`Private`nf[#, 
                    CalculateUtilities`GraphicsUtilities`Private`acc]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Exp, {
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`prec = 
                    Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3]}, Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[
                    Exp[#], 
                    CalculateUtilities`GraphicsUtilities`Private`prec]]]]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[DateString, {
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`dates, 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    CalculateUtilities`GraphicsUtilities`Private`dates = 
                    Map[DateList, 
                    CalculateUtilities`GraphicsUtilities`Private`pts]; 
                    CalculateUtilities`GraphicsUtilities`Private`spec = Switch[
                    Map[Length, 
                    Map[Union, 
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`dates]]], {
                    Blank[], 1, 1, 
                    BlankSequence[]}, {"Year"}, {
                    Blank[], 
                    Blank[], 1, 
                    BlankSequence[]}, {"MonthNameShort", " ", "Year"}, 
                    Blank[], {
                    "DayShort", " ", "MonthNameShort", " ", "Year"}]; 
                    If[(CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/
                    31536000 > 25, 
                    CalculateUtilities`GraphicsUtilities`Private`spec = {
                    "Year"}]; 
                    With[{CalculateUtilities`GraphicsUtilities`Private`s = 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    DateString[#, 
                    CalculateUtilities`GraphicsUtilities`Private`s]& ]]; 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm = 
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]]]], 
                   ReleaseHold[
                    Uncompress[
                    "1:eJztVm1v0zAQbinv7/\
APkPiMGANpH5AQ29iYNKAk5XtvsZNauHawnb3w58FnN0mzdpViOkBT+uFUX5rHd889d71nRzJK+\
71eT1+35qPkJL2Fp6fW7MhpLgtBPpzmimrNpEiv4bO71sTU7FIOZ5R4301r9qSagvHnt/g+\
8KTgYOg3wzgzjOrxvoJ8whJde4aKHdufjLlMgLOf9Pnm1tablxseBUMZgjFUCb3ZFjGfKNA07SHQDW\
u2OYjv/vikPH4uOI/\
pj4KKhOpH1jtSQCyMFMAxneBbrzRR9zEvA4KAIpfOkhPndtsLtFFMZCM6zfGNC7naaIsLKtOemgclN\
av046O/jQ9k7ELyHpezOzv+wsK4WuydF9U/p26A53dt4ZU8WcobpveeI21g2DHVi2y+\
aF0lT0jVsi74GVWXNFvWGuPFE6b+Rzpk2iyG8aptGHR6ZCu8XHmL8K/\
bwsscW34m7YfWfPGOEnDZZKjk9kmSgs+\
iaKY88AJtn67OrcNj3Kv4jtEZUsEKJ7Jxlt3iuuNxBV7vCDHWbrwG6Yh6AkQ0p9ZFHLe7LGNmZwIKE\
gs8u65f9thI1qEE3Nm+\
9kwQZseXJ2TV2oTmIJ2rO5hk8vWPilvJ5VyTIe8HwtCMqpWiv4P1UZZcQUYyMJIYL2jqNZjDKqkhqG\
DZD0qQOAfBEJL9sh/3zT+crwRSta9QXcqzOHClOQ1Pol8W+\
JCKzEya23Xg6ApuW8wmkie16iKWpvPTZn1M95tMN25oDvRQEkJLEj7Quz2h2xP+\
4p6wsAN3S0K3JHRLQrckdEvC/7skuIjxX+k3QqW23g=="]]}; Typeset`initDone$$ = True), 
                DynamicModuleValues :> {}, Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {}]}], 
       XMLElement["dataformats", {}, {"minput"}]}]}], Typeset`pod3$$ = 
   XMLElement[
   "pod", {"title" -> "Arc length integral", "scanner" -> "Plot", "id" -> 
     "ArcLengthIntegral", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Integrate[Sqrt[1 + (9 x^4)/(-1 + x^3)^4], {x, -5, 5}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              TagBox[
               RowBox[{
                 SubsuperscriptBox["\[Integral]", 
                  RowBox[{"-", "5"}], "5"], 
                 RowBox[{
                   SqrtBox[
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"9", " ", 
                    SuperscriptBox["x", "4"]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["x", "3"]}], ")"}], "4"]]}]], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm]}, 
             "RowDefault"], TraditionalForm]], "Output", {}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}]}], 
   Typeset`pod4$$, Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, 
   Typeset`pod8$$, Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, 
   Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, 
   Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, 
   Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, 
   Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, 
   Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, 
   Typeset`pod32$$, Typeset`pod33$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`aux8$$ = {True, False, {False}, True},
    Typeset`aux9$$ = {True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "3", "datatypes" -> 
     "Plot", "timedout" -> "Plot", "timedoutpods" -> "", "timing" -> "2.153", 
     "parsetiming" -> "0.695", "parsetimedout" -> "false", "recalculate" -> 
     "http://www4c.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa229022h67848c910d2aa0000439i0c0e74a9c780&s=31", "id" -> 
     "MSPa229122h67848c910d2aa00003h72fiai9983ih20", "host" -> 
     "http://www4c.wolframalpha.com", "server" -> "31", "related" -> 
     "http://www4c.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSPa229222h67848c910d2aa000040d3852773acfh34&s=31", "version" -> "2.6", 
     "profile" -> "EnterDoQuery:0.,StartWrap:2.15255"}, {
    "success" -> "true", "error" -> "false", "numpods" -> "0", "datatypes" -> 
     "Plot", "timedout" -> "Plot", "timedoutpods" -> "", "timing" -> "1.864", 
     "parsetiming" -> "0.", "parsetimedout" -> "false", "recalculate" -> "", 
     "id" -> "", "host" -> "http://www4c.wolframalpha.com", "server" -> "31", 
     "related" -> "", "version" -> "2.6", "profile" -> 
     "EnterDoRecalculate:0."}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2016, 4, 4, 2, 45, 51.275642`8.462486081936213}, "Line" -> 12, 
    "SessionID" -> 23541127974624295096}, Typeset`showpods$$ = {1, 2, 3}, 
   Typeset`failedpods$$ = {4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
   18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33}, 
   Typeset`chosen$$ = {
   "Plot", "Plot", 1, 1, "Input", "Plot[(1 - x^3)^(-1), {x, -5, 5}]"}, 
   Typeset`open$$ = True, Typeset`newq$$ = 
   "Plot[(1 - x^3)^(-1), {x, -5, 5}]"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{560., {667., 16.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$}, Typeset`chosen$$, Typeset`open$$, 
         Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
         Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
         Typeset`failedpods$$, Typeset`newq$$, 
         "http://www4c.wolframalpha.com/api/v2/recalc.jsp?id=\
MSPa229022h67848c910d2aa0000439i0c0e74a9c780&s=31", Typeset`asyncpods$$}]]; 
     Typeset`asyncpods$$ = {}; Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
YwP+B6bD4Sc=
     "]], LineBox[CompressedData["
1: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
7kOF/wHythbe
     "]], 
    LineBox[{{1.0020785185043375`, 1.6666278657051692`}, {
     1.0020888006199147`, -1.0806828323403745`}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-5, 5}, {-1.0806828323403745`, 1.6666278657051692`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.668697945823533*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.668697576095737*^9, 3.668697578992978*^9}},
 NumberMarks->False],

Cell[BoxData[""], "Input", "Input",
 CellChangeTimes->{{3.668697568570138*^9, 3.668697569476777*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.668697572083952*^9, 3.668697573744051*^9}},
 NumberMarks->False],

Cell[BoxData[""], "Input", "Input",
 CellChangeTimes->{{3.668697561526519*^9, 3.668697562429434*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.668697556981488*^9, 3.668697557152485*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["", "Subsection"]], "Section",
 CellChangeTimes->{{3.668697197216402*^9, 3.668697251810804*^9}, {
   3.66869759602283*^9, 3.6686976045047083`*^9}, {3.6686991848370237`*^9, 
   3.668699188717453*^9}, 3.668699374813998*^9}],

Cell[CellGroupData[{

Cell[TextData[StyleBox[" mathematica\:7f16\:7a0b\:8bed\:8a00", \
"Subsection"]], "Subsection",
 CellChangeTimes->{3.668699353892845*^9}],

Cell[CellGroupData[{

Cell["\:56db\:9879\:57fa\:672c\:89c4\:5219", "Subsubsection",
 CellChangeTimes->{{3.6686981351227407`*^9, 3.668698138679578*^9}}],

Cell["\<\
1.\:51fd\:6570\:540d\:9996\:5b57\:6bcd\:5927\:5199
2.[]    \:6240\:8981\:8ba1\:7b97\:7684\:5185\:5bb9
3.{}   \:53d6\:503c\:8303\:56f4
4.\:540c\:65f6\:6309\:4f4fshift+enter\:ff08enter\:662f\:56de\:8f66\:7b26\:ff09\
\>", "Text",
 CellChangeTimes->{{3.668698170171762*^9, 3.668698273118222*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", "1"}]], "Input",
 CellChangeTimes->{{3.668698349396245*^9, 3.6686983529938707`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.668698353969191*^9}]
}, {1, 2}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", " ", "-", " ", 
      RowBox[{"x", "^", "3"}]}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
YwP+B6bD4Sc=
     "]], LineBox[CompressedData["
1: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
7kOF/wHythbe
     "]], 
    LineBox[{{1.0020785185043375`, 1.6666278657051692`}, {
     1.0020888006199147`, -1.0806828323403745`}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-5, 5}, {-1.0806828323403745`, 1.6666278657051692`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.668698375929154*^9}]
}, {1, 2}]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.668699217592121*^9, 3.6686992321846027`*^9}, 
   3.668699266807789*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:4f7f\:7528\:9762\:677f", "Subsection",
 CellChangeTimes->{3.668699264615777*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Integral]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"1", "-", 
       SuperscriptBox["x", "3"]}]], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.668698383073388*^9, 3.6686983865773287`*^9}, 
   3.6686986147785263`*^9, {3.668698672006406*^9, 3.668698700402377*^9}, {
   3.668698734768808*^9, 3.668698807057455*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"ArcTan", "[", 
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{"2", " ", "x"}]}], 
     SqrtBox["3"]], "]"}], 
   SqrtBox["3"]], "-", 
  RowBox[{
   FractionBox["1", "3"], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "-", "x"}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "6"], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "+", "x", "+", 
     SuperscriptBox["x", "2"]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.6686988226194153`*^9}]
}, {1, 2}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"1", "-", 
     SuperscriptBox["x", "3"]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.668698918017425*^9, 3.6686989918439693`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
QaThf7YA/IxC81XfKBX+D6s6DJ8=
     "]], LineBox[CompressedData["
1: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
qK+bnw7/AxPTRps=
     "]], 
    LineBox[{{0.9998200427480256, 2.699102238928518}, {
     0.9998311827376769, -1.832213417614222}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-3, 3}, {-1.832213417614222, 2.699102238928518}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.668698993538604*^9}]
}, {1, 2}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"1", "-", 
     SuperscriptBox["x", "3"]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6686988524770317`*^9, 3.668698881027853*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
YwP+B6bD4Sc=
     "]], LineBox[CompressedData["
1:eJwV12c4FfwbB/CDY53sY5SQ1GmRUSqFfr/GE4Wkx+ZBFColJBXpHISQ7IxI
yMzIyDq5MyohI8mWHZKRcYyDf/8X9/W9Pq++1/flvd3a8eIVVgKB0P/3/p/l
6TdqKWNzSIt1WPj+uVlYFP2VrC44j15flg/acJoB+9MDx5qk5tFb09IXSGEG
upzaW6zk5lF1tDyvZ880VDRUb3hrzKMOC0lp58Ep8PN6blb3YB4FG/cwR4R+
w0pu2B+zwHmUFc2uRkidBIde/8e/o+fRg7FBl0LVSbig4losUDiPxO77a4Xc
/AWbp3TIRhPz6NC7mLKv0+MQsPV05hhjHvF2P5p1ihwHpuaxE/fZF1BFW9QK
r/o49CfvcoyXXkC8nhMbzNAxSDfZqBsyXECmmUZRkno/wdBH1ijYZgHFSVzS
5SL9BLZcoyGVWwuoOjh9XKdmFCyIeatPHi8g0UxtjRq1URDJtZJToS+g8rhQ
h6tqI1DVGVQyWLuAqE6Vtsobw3CLWHr6SdsCcnUS1xWrHoYGE8H/BqcW0Op3
71dc54fBi1j1JGj7IuKdKLjY7zgEigpTW47IL6Im8929uceGoNdEPHXg2CLa
q93kdpljCFRynSsO6y+ioaxoil3iIEyb7Jju911EGv86RZ3qGwDzXJ8LhyYX
UfHlbVv+e9APpK68nh9Li+ggu+umk/r9UEzstQ9gZ6AvC6fbPsj2g5DpIdoP
KQaKdM4lHC39AZ+Jo28e6zHQ8lOzx6YBfXDYVIPc95aBdteoGhRY9MCwj8sL
/2oGSinmORMo2QOhuS9kDzYzUIf9pIhmbzdMEpdO+Y8z0MPjw20Wlt2QlJt+
+4DEEvocxH896EYX8LOTvvvSlpD9gJJUVE4HzM/d8p19soSMum/sn7zfAV2D
7YfNY5cQx6BKzohGB6S8f/VMqWAJvSj82FY81A4qHidMeoaX0LNQg+EnMu1g
PXe3R0lzGem27bfrLGsDjcEfQc/1lxFBXdT/UEgbyLWcUee8tIwSlDIb+Gzb
gJEjnNBzbxm1ep/vViS3QdC1PEu/rGW0SL7Atu78Dd4O/Bzs4VtBGqUL3Ac1
WiGu+Xy4xtYV1HdU0s5/RytQoehU/u4VtBJ5yB8RWkEr3jvFD6+gum4Tsy9l
X6HfeJvtAecVdJnYlYGVvwKp2XDcr20FJXytm79ypAUsKj5MH3i+iqz995fF
/24El41bMq8zVpGFSa52XlEj+GMJA0rxKjptwNQw9GyE/CrnMrGvq4gTyk7o
CzYCx6dtj5icTHQtI622X/0L5DTdE//owkTeQs/an+fWQ7UARQfRmOjXGVzH
Qq2HDr3mhyXBTHT3yGm53gv1wPpt10hmBhMZ2Pttmp2rA8OO1tynP5ho6Nb3
UzaoDtb79/9jorWGIPSX2uGJWiDLdLp9NV5D2kGd+wwqa2GPjU+mlu0aYqPI
Ub9F18LFkS7+47Q1hBtoCdOatZA67tclU7yG3GbnrN2yP8H5PwOOkzLriOAc
QO30/QjxbFGxD1fW0XctjW6J2zUwdcKtSpBzA/H1PO41NqqB41TjiWTyBjo9
y3ap8VgN9DPFj9XKbSCLrSH+Nqw1ILP4olPAcgMNGwcJ74qohtSxjM1J1Ruo
0TRGPqSyCtpHLbSszxBwPKla0wVXAsFX1zJLm4AFs9XTOvdWwh4Kdpm/SMD3
6f9WXCVXwl2b7XG+lgSsZNf6kP3nexDvH5rIvEvAm3sT70iHvAfzTvuAuUwC
9tC6Zy/TCtBf7/zZh58Fu/8IVVq98Q6kIx5JGYiy4G05v481nXkHVubRLhRJ
FqxwSeHg5LZ30D/5TvLjPhbc4Om8Z/0rHQZ4uZ05z7Dgfw2IFEc1OgzqvhAP
8GDBhSOFLPNby2Gktf7603EWvOmU2H+W3KWw63nfe8sZFpxTfHlDYqIEbC/P
iigyWDBvVcQPgfoSGJ0Xfd9MZMVWMes3Y578tYi1sJA0K84UksqSFimBMaMl
eoQhK65Zk+9L2l8ME907+WKrWfGOe4pdwbQiqE362rv4mRUfrOubGr9aBKlX
qdn/NrPiyPWyOfuLRWDN6Nbm7WXFqgUR+S07iqBLKDyQusiKnZS+XztTWwif
z7Jw2+1lw2c8727xEiuE9OJeNuWnbFhYUW4u6Es++HoGtoZEsmGrb1WZY6X5
cPmfo8m/49hw/je9l1ap+SDdGnEyLZ0Nj929fS/lYT5ET2nRxKvYMNf9sQN3
DuaDH6VsnbDAhuVOnVYSTXwDtuFRy19MiXjs6eufLEF5YEW/1E26RMRhWmwx
Xe55YDoi907DjogTrsz8qr2eBzpHqqmVLkSMUi4PjGjlgXL3NGdREBEXyv/i
lOTNA9YdZ0WfVxCxu3mbXtWuXEjIXz1wTYYdd4Qftc82z4bo7o/CaXvYcfNW
7dcnTmRDGDFscUieHVvQLRaWKNnwyHBP2X+q7Fjdczyvafo1OKzon9DTZ8di
RmkvxB69hmMnc3RVfNkxKyXYfKAoC763WDlwTLBjoc2yQn/kM2Fsx/mndTPs
2JfDucRHJBOWXVXzgxnsmOue96ajzAyQEBddEmXnwB5n3rWy12WAjXW9925p
Drx3/mHtXrsMmPlzKE7TkAPzH2XEXU9LB5LwprqAKg4sX84+4ng8DSRslybP
f+bAYhWuDS170mB/yQg/uZkD+yzn8uqS0+CC+XuDuF4O7Hzo22TsWCo8S3Ed
yFriwL/f7TV3iUiFnYf6lxrkOfGnPQ6crLOv4Lhh0W7+OE6cROc+/pCeAlOp
6h8sX3LiB1e15VWyUiCe8cE6L40TS32oyyDGpgAz+nu8XiEnbg1sbWl3S4HS
bgY54gsnPsk067FRTgHlS8cIWwhcePu1EdnVvGTY5wAdMle4cIBYdbJzcRJ0
0TXuuFznwi+3vhq6mp4Ej3mbyTVOXDiuzoDmFJMEYzn95694cmG+aG/3N+5J
8GqW5UPaMy489o/g8ixOAmm302/k6riw9A9dNuvGlyDm9fnxYQVuXJrmM+Mw
nwh9qy72fIe5cf390jf7RxMh1VVKY1SNG4uerXi13p4IylddiFHnuHFnzNva
5vJEuHhB8uHCFW4sJfLt9kGfRAiScrpd+Jwbe5T40/vEEoFQvtnyAImEb1zI
2eIYkQCflKvVSYIkXDcz7p7ungDBOTckBsVIOCFSdo1pnQCSSVWdoRQSrtY9
8XFRKQGOPXbQn8UkzGjYbLO3JR5uG70/m+dGwm8W3UWuC8fD+JydsvwICdPD
OIZvZsdBQ5MCZfQXCfNucveXi46DvCyGSMIfEo6f6TlE8I6DOzZ+DF7CJrxF
4vORceM4YG1NLfstvgnH1MyXVLDHgXj+CM6+sAknarw8a2kTC9q3bHTk6Jvw
5KcQVfr+GMiZtLDdF86D7Qv6BcOXo0DhU2XLzRgePF0ZeJIyEQV5L3eqF7zg
waUGpnYfuqIg33CCrPaaB3MHJOoo0KOg6L1rpc4HHqz2xqQ17WEU0COCJJwY
PDjiYOZxKe4oqFMr+1psxotLdlTnlVAiYSRIBP2zkw8fsE5aSfYKB8+Q2F8C
snw4THxb8hHXcBCN2Bbdo8SH3UeM3rbbhYNm3N5ZF8SHb+QJDqnphENmhnpy
kikf3qeXUROzORxufbzCSQjlw6O5ktahb8KAuVHUVLbGh7kENWu2TIaCsIuh
lWI7P47yvmXWTg2Bc653/Px7+fFuE0fttjshQHOLyukf4sc7z5badDuEwJT7
d2bIDD+eSq4a2jAOgcsnsxqWiAK4uWL1RIZSCBzXkr1qIiWAw/0qiiZrn8If
c9kkcT0B/PI+C/Z9EQxmVFnh+LcCeEl6WlTCLQh8DtQplpYK4LoE/RV2uyDI
GbbXaaML4H1LYfxMwyAgnE315a0WwA4em1/yHAmCFMHtyw+aBLCteZpkBSMQ
ppJE+yzGBPC1GWaYsXsgUD+wpEuLC+I7rKPlUoEBkErqUE15IIjXFomxb+r8
wayFc5mNJoi/jeANJbo/CEQfeWvjI4gvaEZXvsv2h/uUZ4o7Av96/LsiI8Qf
dLEhJSlaEN+O3us9Y+QPS67f+BILBHGUYfLNuZ9+cG6geSBuXBA7tuwrmOH3
g9/Fn/3CDYQwchk8mfTgEcysnfEqNRbCX1eile84P4L5UzUeP8yE8CLHy996
do+A2VThJGv913+cY6X1HgHPWIFZ9U0hzNmqJSNOeQRymxMU5vyEcJuG5da7
jT7gcNe5/WKZEF7/NzYhf5cPTKps3S20jYy5VUocG395QSqbZl+kDBn7HyV+
OTfgBVaNtyO37CJjRxEVZuN3L2izaWTbvp/8d++egqlKL6gIpvUrqJKxV3xW
SUC0F4QM/4zRMSLjVI7CMXkNL1AOKeR5/JSM5ZYpmYwMGkyZDlTzhJNxRZV+
sVUiDdIpfO4hUWRM1+ssb46igWS53fizeDI+YEsL/eBNA45R8Y+pWWTMe1YG
WCxo0KFKe1jz6a9z3pdUkGkQxpFzWLOejHXs1nQjSDTQbun6Xd9IxpPZkh63
WGjw94swb20j445yfXe1aSpkhv5UGRwi4wEeMSeZeipcNheeufKTjD2b6CS5
Kips230ibXyCjNczvUlqpVSIoMeKzM6SsTd3IMUxjQrn/T413F4g46uKtofC
EqjAdXHee2npb3/6s4jySCpUSWxX9WCS8U0RD/VfQVR48FPnz8YGGRMV7uzb
7kOF/wHythbe
     "]], 
    LineBox[{{1.0020785185043375`, 1.6666278657051692`}, {
     1.0020888006199147`, -1.0806828323403745`}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-5, 5}, {-1.0806828323403745`, 1.6666278657051692`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6686988823474197`*^9}]
}, {1, 2}]]
}, Closed]]
}, Open  ]],

Cell["", "Section",
 CellChangeTimes->{
  3.668697606907242*^9, {3.668698288987962*^9, 3.668698294160761*^9}, 
   3.6686992716863117`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{
      SqrtBox["4"], "\[Pi]"}], "]"}], "-", " ", 
    SuperscriptBox["10", "2"]}]}], "\[LineSeparator]"}]], "Section",
 CellChangeTimes->{{3.6691276348723803`*^9, 3.669127788478121*^9}, 
   3.669128015370875*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{
     SqrtBox["4"], "\[Pi]"}], "]"}], "-", " ", 
   SuperscriptBox["10", "2"]}]}]], "Input",
 CellChangeTimes->{{3.669127794055303*^9, 3.6691277951345987`*^9}, {
  3.6691278945897293`*^9, 3.6691279911158543`*^9}}],

Cell[BoxData[
 RowBox[{"-", "100"}]], "Output",
 CellChangeTimes->{{3.6691279796665087`*^9, 3.6691279930805893`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", " ", "-", " ", 
      SuperscriptBox["x", "3"]}], ")"}], 
    RowBox[{"-", "1"}]], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.669128033547327*^9, 3.6691280469916067`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
YwP+B6bD4Sc=
     "]], LineBox[CompressedData["
1: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
7kOF/wHythbe
     "]], 
    LineBox[{{1.0020785185043375`, 1.6666278657051692`}, {
     1.0020888006199147`, -1.0806828323403745`}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-5, 5}, {-1.0806828323403745`, 1.6666278657051692`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.66912805061302*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "Section",
 CellChangeTimes->{{3.669128168588323*^9, 3.669128176503387*^9}}],

Cell[BoxData["2"], "Input",
 CellChangeTimes->{{3.669128178370289*^9, 3.669128186798744*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"{", "1", "}"}]}], ";", 
  RowBox[{"s", "=", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", "*", 
       RowBox[{
        RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}], "}"}], ",", "18"}], 
    "]"}]}], ";", 
  RowBox[{"n", "=", "31"}], ";"}], "\n", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "2"}], ",", 
   RowBox[{"i", "\[LessEqual]", "n"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{"a", "=", 
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"Append", "[", 
        RowBox[{"a", ",", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"2", "-", 
           RowBox[{"2", "*", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"a", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", "-", "1"}], "]"}], "]"}], "/", "2"}], ")"}], 
               "^", "2"}]}], "]"}]}]}], "]"}]}], "]"}], ",", "18"}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"s", "=", 
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"Append", "[", 
        RowBox[{"s", ",", 
         RowBox[{"3", "*", 
          RowBox[{"2", "^", 
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}]}], "*", 
          RowBox[{"a", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ",", "18"}], "]"}]}], 
    ";"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"s1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"[", 
        RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
      RowBox[{"s", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<n\>\"", ",", "\"\<                       s\>\"", ",", 
   "\"\<  \n                              \>\"", ",", "\"\<s1\>\""}], 
  "]"}], "\n", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", 
    RowBox[{"n", "-", "1"}]}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{"Print", "[", 
    RowBox[{"i", ",", "\"\<               \>\"", ",", 
     RowBox[{"s", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<             \>\"", ",", 
     RowBox[{"s1", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.669128422023285*^9, 3.669128422024613*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"n\"\>", 
   "\[InvisibleSpace]", "\<\"                       s\"\>", 
   "\[InvisibleSpace]", "\<\"  \\n                              \"\>", 
   "\[InvisibleSpace]", "\<\"s1\"\>"}],
  SequenceForm[
  "n", "                       s", "  \n                              ", "s1"],
  Editable->False]], "Print",
 CellChangeTimes->{3.669128423482875*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "1", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "2.59807621135331594029116951225880855042`18.", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "0.50775232987693320789561653922977138978`16.94947966010914"}],
  SequenceForm[
  1, "               ", 2.59807621135331594029116951225880855042`18., 
   "             ", 
   0.50775232987693320789561653922977138978`16.94947966010914],
  Editable->False]], "Print",
 CellChangeTimes->{3.669128423485508*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "2", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.10582854123024914818678605148857994019`18.", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "0.02680007205098904897496341800315630453`15.62922918278663"}],
  SequenceForm[
  2, "               ", 3.10582854123024914818678605148857994019`18., 
   "             ", 
   0.02680007205098904897496341800315630453`15.62922918278663],
  Editable->False]], "Print",
 CellChangeTimes->{3.6691284234904957`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "3", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.13262861328123819716174946949173624473`17.992406645744136", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "0.00672158976562900997339735171668494463`15.021537195548904"}],
  SequenceForm[
  3, "               ", 
   3.13262861328123819716174946949173624473`17.992406645744136, 
   "             ", 
   0.00672158976562900997339735171668494463`15.021537195548904],
  Editable->False]], "Print",
 CellChangeTimes->{3.669128423492958*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "4", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.13935020304686720713514682120842118935`17.990536921312355", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "0.00168174784364243097620610525123891793`14.418078766818976"}],
  SequenceForm[
  4, "               ", 
   3.13935020304686720713514682120842118935`17.990536921312355, 
   "             ", 
   0.00168174784364243097620610525123891793`14.418078766818976],
  Editable->False]], "Print",
 CellChangeTimes->{3.669128423497345*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "5", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.14103195089050963811135292645966010729`17.990071244569165", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "0.00042052139495243733925638250156553824`13.815669757664287"}],
  SequenceForm[
  5, "               ", 
   3.14103195089050963811135292645966010729`17.990071244569165, 
   "             ", 
   0.00042052139495243733925638250156553824`13.815669757664287],
  Editable->False]], "Print",
 CellChangeTimes->{3.669128423502212*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "6", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.14145247228546207545060930896122564553`17.989954934510795", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "0.00010513562639557006585403616863389626`13.213522548756071"}],
  SequenceForm[
  6, "               ", 
   3.14145247228546207545060930896122564553`17.989954934510795, 
   "             ", 
   0.00010513562639557006585403616863389626`13.213522548756071],
  Editable->False]], "Print",
 CellChangeTimes->{3.669128423506619*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "7", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.14155760791185764551646334512985954179`17.98992586380858", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "0.00002628423646076315250625859129380901`12.611440755336362"}],
  SequenceForm[
  7, "               ", 
   3.14155760791185764551646334512985954179`17.98992586380858, 
   "             ", 
   0.00002628423646076315250625859129380901`12.611440755336362],
  Editable->False]], "Print",
 CellChangeTimes->{3.669128423511836*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "8", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.1415838921483184086689696037211533508`17.989918596558677", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "6.57107973168706948890220979837303`12.009375313629397*^-6"}],
  SequenceForm[
  8, "               ", 
   3.1415838921483184086689696037211533508`17.989918596558677, 
   "             ", 6.57107973168706948890220979837303`12.009375313629397*^-6],
  Editable->False]], "Print",
 CellChangeTimes->{3.6691284235163794`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "9", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.14159046322805009573845850593095172384`17.9899167797728", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "1.64277122145480631813467916562957`11.407313959715678*^-6"}],
  SequenceForm[
  9, "               ", 
   3.14159046322805009573845850593095172384`17.9899167797728, "             ",
    1.64277122145480631813467916562957`11.407313959715678*^-6],
  Editable->False]], "Print",
 CellChangeTimes->{3.669128423520892*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "10", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.14159210599927155054477664061011735341`17.989916325577987", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "4.1069288589704809744415871455284`10.805253627741836*^-7"}],
  SequenceForm[
  10, "               ", 
   3.14159210599927155054477664061011735341`17.989916325577987, 
   "             ", 4.1069288589704809744415871455284`10.805253627741836*^-7],
  
  Editable->False]], "Print",
 CellChangeTimes->{3.669128423525635*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "11", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.14159251669215744759287408476883190625`17.989916212029392", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "1.0267322650759667522729648713625`10.203193551252442*^-7"}],
  SequenceForm[
  11, "               ", 
   3.14159251669215744759287408476883190625`17.989916212029392, 
   "             ", 1.0267322650759667522729648713625`10.203193551252442*^-7],
  
  Editable->False]], "Print",
 CellChangeTimes->{3.669128423530156*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "12", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.14159261936538395518954931206531904251`17.989916183642247", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "2.56683069414825921968539193705`9.601133538634121*^-8"}],
  SequenceForm[
  12, "               ", 
   3.14159261936538395518954931206531904251`17.989916183642247, 
   "             ", 2.56683069414825921968539193705`9.601133538634121*^-8],
  Editable->False]], "Print",
 CellChangeTimes->{3.6691284235356073`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "13", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.14159264503369089667214150891923841301`17.98991617654546", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "6.41707675503211213157298060773`8.999073541983568*^-9"}],
  SequenceForm[
  13, "               ", 
   3.14159264503369089667214150891923841301`17.98991617654546, 
   "             ", 6.41707675503211213157298060773`8.999073541983568*^-9],
  Editable->False]], "Print",
 CellChangeTimes->{3.669128423540749*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "14", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.14159265145076765170425364049221902073`17.989916174771263", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "1.60426918998686953992325518181`8.397013549324958*^-9"}],
  SequenceForm[
  14, "               ", 
   3.14159265145076765170425364049221902073`17.989916174771263, 
   "             ", 1.60426918998686953992325518181`8.397013549324958*^-9],
  Editable->False]], "Print",
 CellChangeTimes->{3.6691284235454493`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "15", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.14159265305503684169112318041547420254`17.989916174327714", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "4.010672975735199791996041291`7.794953557664334*^-10"}],
  SequenceForm[
  15, "               ", 
   3.14159265305503684169112318041547420254`17.989916174327714, 
   "             ", 4.010672975735199791996041291`7.794953557664334*^-10],
  Editable->False]], "Print",
 CellChangeTimes->{3.669128423549933*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "16", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.14159265345610413926464315961507833164`17.989916174216827", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "1.0026682439818015693903503292`7.192893566253207*^-10"}],
  SequenceForm[
  16, "               ", 
   3.14159265345610413926464315961507833164`17.989916174216827, 
   "             ", 1.0026682439818015693903503292`7.192893566253207*^-10],
  Editable->False]], "Print",
 CellChangeTimes->{3.6691284235544157`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "17", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.14159265355637096366282331655411336456`17.98991617418911", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "2.50667060998450493684618146`6.590833574904454*^-11"}],
  SequenceForm[
  17, "               ", 
   3.14159265355637096366282331655411336456`17.98991617418911, 
   "             ", 2.50667060998450493684618146`6.590833574904454*^-11],
  Editable->False]], "Print",
 CellChangeTimes->{3.669128423557827*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "18", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.14159265358143766976266836592257517916`17.98991617418218", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "6.26667652498001297547200688`5.988773583571294*^-12"}],
  SequenceForm[
  18, "               ", 
   3.14159265358143766976266836592257517916`17.98991617418218, 
   "             ", 6.26667652498001297547200688`5.988773583571294*^-12],
  Editable->False]], "Print",
 CellChangeTimes->{3.669128423561748*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "19", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.14159265358770434628764837889804718604`17.989916174180447", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "1.56666913124617515845278805`5.386713592242035*^-12"}],
  SequenceForm[
  19, "               ", 
   3.14159265358770434628764837889804718604`17.989916174180447, 
   "             ", 1.56666913124617515845278805`5.386713592242035*^-12],
  Editable->False]], "Print",
 CellChangeTimes->{3.669128423564679*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "20", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.14159265358927101541889455405649997408`17.989916174180014", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "3.9166728281161703427474619`4.7846536009137495*^-13"}],
  SequenceForm[
  20, "               ", 
   3.14159265358927101541889455405649997408`17.989916174180014, 
   "             ", 3.9166728281161703427474619`4.7846536009137495*^-13],
  Editable->False]], "Print",
 CellChangeTimes->{3.669128423567442*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "21", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.14159265358966268270170617109077472027`17.98991617417991", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "9.791682070290883636003337`4.182593609585708*^-14"}],
  SequenceForm[
  21, "               ", 
   3.14159265358966268270170617109077472027`17.98991617417991, 
   "             ", 9.791682070290883636003337`4.182593609585708*^-14],
  Editable->False]], "Print",
 CellChangeTimes->{3.6691284235702343`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "22", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.14159265358976059952240907992713475364`17.989916174179886", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "2.447920517572749520196752`3.5805336182577308*^-14"}],
  SequenceForm[
  22, "               ", 
   3.14159265358976059952240907992713475364`17.989916174179886, 
   "             ", 2.447920517572749520196752`3.5805336182577308*^-14],
  Editable->False]], "Print",
 CellChangeTimes->{3.669128423572831*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "23", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.14159265358978507872758480742233672116`17.989916174179882", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "6.11980129393189168248933`2.9784736269297643*^-15"}],
  SequenceForm[
  23, "               ", 
   3.14159265358978507872758480742233672116`17.989916174179882, 
   "             ", 6.11980129393189168248933`2.9784736269297643*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{3.669128423575333*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "24", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.14159265358979119852887873931401921049`17.989916174179886", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "1.52995032348297403824717`2.376413635601804*^-15"}],
  SequenceForm[
  24, "               ", 
   3.14159265358979119852887873931401921049`17.989916174179886, 
   "             ", 1.52995032348297403824717`2.376413635601804*^-15],
  Editable->False]], "Print",
 CellChangeTimes->{3.66912842357787*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "25", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.14159265358979272847920222228805745766`17.989916174179886", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "3.8248758087074357941335`1.7743536442738415*^-16"}],
  SequenceForm[
  25, "               ", 
   3.14159265358979272847920222228805745766`17.989916174179886, 
   "             ", 3.8248758087074357941335`1.7743536442738415*^-16],
  Editable->False]], "Print",
 CellChangeTimes->{3.669128423580449*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "26", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.14159265358979311096678309303163687101`17.989916174179886", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "9.562189521768589921906`1.172293652945879*^-17"}],
  SequenceForm[
  26, "               ", 
   3.14159265358979311096678309303163687101`17.989916174179886, 
   "             ", 9.562189521768589921906`1.172293652945879*^-17],
  Editable->False]], "Print",
 CellChangeTimes->{3.669128423584454*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "27", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.14159265358979320658867831071753609006`17.989916174179886", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "2.390547380442147507762`0.5702336616179167*^-17"}],
  SequenceForm[
  27, "               ", 
   3.14159265358979320658867831071753609006`17.989916174179886, 
   "             ", 2.390547380442147507762`0.5702336616179167*^-17],
  Editable->False]], "Print",
 CellChangeTimes->{3.669128423587229*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "28", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.14159265358979323049415211513901116769`17.989916174179886", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "0``17.191736305821767"}],
  SequenceForm[
  28, "               ", 
   3.14159265358979323049415211513901116769`17.989916174179886, 
   "             ", 0``17.191736305821767],
  Editable->False]], "Print",
 CellChangeTimes->{3.6691284235898952`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "29", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.14159265358979323647052056624437995415`17.989916174179886", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "0``17.191736305821767"}],
  SequenceForm[
  29, "               ", 
   3.14159265358979323647052056624437995415`17.989916174179886, 
   "             ", 0``17.191736305821767],
  Editable->False]], "Print",
 CellChangeTimes->{3.66912842359302*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "30", "\[InvisibleSpace]", "\<\"               \"\>", "\[InvisibleSpace]", 
   "3.14159265358979323796461267902072215183`17.989916174179886", 
   "\[InvisibleSpace]", "\<\"             \"\>", "\[InvisibleSpace]", 
   "0``17.191736305821767"}],
  SequenceForm[
  30, "               ", 
   3.14159265358979323796461267902072215183`17.989916174179886, 
   "             ", 0``17.191736305821767],
  Editable->False]], "Print",
 CellChangeTimes->{3.669128423595805*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Pi"], "Input",
 CellChangeTimes->{{3.6691284373192263`*^9, 3.669128440061777*^9}}],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.66912844035885*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Pi"], "Input",
 CellChangeTimes->{{3.669128449289888*^9, 3.6691284517562313`*^9}}],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.669128453692758*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Pi", ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.669128500126329*^9, 3.669128509530155*^9}}],

Cell[BoxData["3.\
141592653589793238462643383279502884197169399375105820974944592307816406286208\
998628034825342117067982148086513282306647093844376249654`100."], "Output",
 CellChangeTimes->{3.669128511019705*^9}]
}, Open  ]]
}, Open  ]],

Cell["", "Section",
 CellChangeTimes->{{3.669128526497789*^9, 3.669128555784444*^9}}],

Cell[CellGroupData[{

Cell["", "Section",
 CellChangeTimes->{{3.669128561020385*^9, 3.669128561676046*^9}, {
  3.669128619169643*^9, 3.66912862196876*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6691285951656647`*^9, 3.669128617148601*^9}}],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Pi", ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{3.669128612559722*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 602},
WindowMargins->{{Automatic, -2}, {Automatic, 30}},
DockedCells->Cell[
  BoxData[
   PanelBox[
    PaneBox[
     TagBox[
      GridBox[{{
         StyleBox[
          DynamicBox[
           FEPrivate`FrontEndResource[
           "MUnitStrings", "TestingNotebook-Title"], 
           ImageSizeCache -> {100., {3., 9.}}], StripOnInput -> False, 
          FontSize -> 12, FontColor -> GrayLevel[0.4]], "\[SpanFromLeft]", 
         "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]"}, {
         ButtonBox[
          TagBox[
           TooltipBox[
            PaneSelectorBox[{False -> PaneBox[
                TagBox[
                 GridBox[{{
                    DynamicBox[
                    FEPrivate`FrontEndResource["MUnitExpressions", "New"], 
                    ImageSizeCache -> {11., {4., 8.}}], 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource["MUnitStrings", "New-Label"], 
                    ImageSizeCache -> {26., {0., 9.}}], "ButtonText", 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}], "Grid"], 
                ImageMargins -> {{Automatic, Automatic}, {4, Automatic}}], 
              True -> PaneBox[
                TagBox[
                 GridBox[{{
                    DynamicBox[
                    FEPrivate`FrontEndResource["MUnitExpressions", "New"]], 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource["MUnitStrings", "New-Label"]], 
                    "ButtonText", StripOnInput -> False, LineColor -> 
                    RGBColor[0.9059, 0.3451, 0.102], FrontFaceColor -> 
                    RGBColor[
                    0.9059, 0.3451, 0.102], $CellContext`BackFaceColor -> 
                    RGBColor[0.9059, 0.3451, 0.102], GraphicsColor -> 
                    RGBColor[0.9059, 0.3451, 0.102], FontColor -> 
                    RGBColor[0.9059, 0.3451, 0.102]]}}, AutoDelete -> False, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}], "Grid"], 
                ImageMargins -> {{Automatic, Automatic}, {4, Automatic}}]}, 
             Dynamic[
              CurrentValue["MouseOver"]], FrameMargins -> 0, ImageSize -> 
             Automatic], 
            DynamicBox[
             FEPrivate`FrontEndResource["MUnitStrings", "New-Tooltip"]], 
            TooltipDelay -> 0.5], Annotation[#, 
            Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource["MUnitStrings", "New-Tooltip"]]], 
            "Tooltip"]& ], Appearance -> 
          FEPrivate`FrontEndResource["MUnitExpressions", "ButtonAppearances"],
           ButtonFunction :> 
          Block[{$ContextPath}, Needs["MUnit`"]; MUnit`PaletteInsertTest[
              InputNotebook[]]], Evaluator -> Automatic, 
          FrameMargins -> {{10, 10}, {0, 0}}, ImageSize -> {Automatic, 28}, 
          Method -> "Queued"], 
         ButtonBox[
          TagBox[
           TooltipBox[
            PaneSelectorBox[{False -> PaneBox[
                TagBox[
                 GridBox[{{
                    DynamicBox[
                    FEPrivate`FrontEndResource["MUnitExpressions", "Run"], 
                    ImageSizeCache -> {9., {4., 8.}}], 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource["MUnitStrings", "Run-Label"], 
                    ImageSizeCache -> {22., {0., 9.}}], "ButtonText", 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.3}}, "Rows" -> {{Automatic}}}], "Grid"], 
                ImageMargins -> {{Automatic, Automatic}, {4, Automatic}}], 
              True -> PaneBox[
                TagBox[
                 GridBox[{{
                    DynamicBox[
                    FEPrivate`FrontEndResource["MUnitExpressions", "Run"]], 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource["MUnitStrings", "Run-Label"]], 
                    "ButtonText", StripOnInput -> False, LineColor -> 
                    RGBColor[0.9059, 0.3451, 0.102], FrontFaceColor -> 
                    RGBColor[
                    0.9059, 0.3451, 0.102], $CellContext`BackFaceColor -> 
                    RGBColor[0.9059, 0.3451, 0.102], GraphicsColor -> 
                    RGBColor[0.9059, 0.3451, 0.102], FontColor -> 
                    RGBColor[0.9059, 0.3451, 0.102]]}}, AutoDelete -> False, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.3}}, "Rows" -> {{Automatic}}}], "Grid"], 
                ImageMargins -> {{Automatic, Automatic}, {4, Automatic}}]}, 
             Dynamic[
              CurrentValue["MouseOver"]], FrameMargins -> 0, ImageSize -> 
             Automatic], 
            DynamicBox[
             FEPrivate`FrontEndResource["MUnitStrings", "Run-Tooltip"]], 
            TooltipDelay -> 0.5], Annotation[#, 
            Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource["MUnitStrings", "Run-Tooltip"]]], 
            "Tooltip"]& ], Appearance -> 
          FEPrivate`FrontEndResource["MUnitExpressions", "ButtonAppearances"],
           ButtonFunction :> 
          Block[{$ContextPath}, Needs["MUnit`"]; MUnit`PaletteRun[
              InputNotebook[]]], Evaluator -> Automatic, 
          FrameMargins -> {{10, 10}, {0, 0}}, ImageSize -> {Automatic, 28}, 
          Method -> "Queued"], 
         ActionMenuBox[
          ButtonBox[
           PaneSelectorBox[{False -> StyleBox[
               TagBox[
                GridBox[{{
                   DynamicBox[
                    FEPrivate`FrontEndResource["MUnitStrings", "More-Label"], 
                    ImageSizeCache -> {30., {0., 9.}}], 
                   "\"\[FilledDownTriangle]\""}}, AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{Automatic}}}], "Grid"], 
               "ButtonText", StripOnInput -> False], True -> StyleBox[
               TagBox[
                GridBox[{{
                   DynamicBox[
                    FEPrivate`FrontEndResource["MUnitStrings", "More-Label"], 
                    ImageSizeCache -> {30., {0., 9.}}], 
                   "\"\[FilledDownTriangle]\""}}, AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{Automatic}}}], "Grid"], 
               "ButtonText", StripOnInput -> False, LineColor -> 
               RGBColor[0.9059, 0.3451, 0.102], FrontFaceColor -> 
               RGBColor[0.9059, 0.3451, 0.102], $CellContext`BackFaceColor -> 
               RGBColor[0.9059, 0.3451, 0.102], GraphicsColor -> 
               RGBColor[0.9059, 0.3451, 0.102], FontColor -> 
               RGBColor[0.9059, 0.3451, 0.102]]}, 
            Dynamic[
             CurrentValue["MouseOver"]], FrameMargins -> 0, ImageSize -> 
            Automatic], Appearance -> 
           FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"], ButtonFunction :> {}, 
           ContentPadding -> False, Evaluator -> None, 
           FrameMargins -> {{10, 10}, {0, 0}}, ImageSize -> {Automatic, 28}, 
           Method -> "Preemptive"], {TagBox[
             GridBox[{{
                PaneBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "MUnitExpressions", "AssignTestIDs"]], 
                 ImageMargins -> {{Automatic, Automatic}, {2, Automatic}}], 
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AssignTestIDs-Label"]]}}, AutoDelete -> 
              False, GridBoxAlignment -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"] :> 
           Block[{$ContextPath}, Needs["MUnit`"]; MUnit`PaletteAddTestIDs[
               InputNotebook[]]], TagBox[
             GridBox[{{
                PaneBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "MUnitExpressions", "SaveAsDotwlt"]], 
                 ImageMargins -> {{Automatic, Automatic}, {2, Automatic}}], 
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "SaveAsDotwlt-Label"]]}}, AutoDelete -> 
              False, GridBoxAlignment -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"] :> 
           Block[{$ContextPath}, Needs["MUnit`"]; MUnit`PaletteSaveAs[
               InputNotebook[]]], TagBox[
             GridBox[{{
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ConvertSelectionToTest"]], 
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "ConvertSelectiontoTest-Label"]]}}, 
              AutoDelete -> False, 
              GridBoxAlignment -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"] :> 
           Block[{$ContextPath}, Needs["MUnit`"]; MUnit`buttonConvertCellGroup[
               InputNotebook[]]]}, Appearance -> 
          FEPrivate`FrontEndResource["MUnitExpressions", "ButtonAppearances"],
           FrameMargins -> {{0, 0}, {0, 0}}, Method -> "Queued"], 
         ItemBox["\"\"", ItemSize -> Fit, StripOnInput -> False], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             TrueQ[
              CurrentValue[
               ButtonNotebook[], {TaggingRules, "$testsRun"}]], 
             Tooltip[
              (Mouseover[
               Grid[{{
                  
                  Pane[#, 
                   ImageMargins -> {{Automatic, Automatic}, {2, Automatic}}], 
                  
                  Style[#2, "ButtonText"]}}, #3, #4], 
               Grid[{{
                  
                  Pane[#, 
                   ImageMargins -> {{Automatic, Automatic}, {2, Automatic}}], 
                  
                  Style[#2, "ButtonText", 
                   RGBColor[0.9059, 0.3451, 0.102]]}}, #3, #4]]& )[
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ClearTestResults-on"]]], 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "ClearTestResults-Label"]]], 
               Alignment -> {Automatic, Center}, 
               Spacings -> {0.4, Automatic}], 
              Dynamic[
               RawBoxes[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "ClearTestResults-Tooltip"]]], TooltipDelay -> 
              0.5], 
             Grid[{{
                Pane[
                 Dynamic[
                  RawBoxes[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "ClearTestResults-off"]]], 
                 ImageMargins -> {{Automatic, Automatic}, {2, Automatic}}], 
                Style[
                 Dynamic[
                  RawBoxes[
                   FEPrivate`FrontEndResource[
                   "MUnitStrings", "ClearTestResults-Label"]]], "ButtonText", 
                 
                 GrayLevel[0.7]]}}, Alignment -> {Automatic, Center}, 
              Spacings -> {0.4, Automatic}]], StandardForm], 
           ImageSizeCache -> {110., {4., 10.}}], Appearance -> 
          FEPrivate`FrontEndResource["MUnitExpressions", "ButtonAppearances"],
           ButtonFunction :> 
          Block[{$ContextPath}, Needs["MUnit`"]; MUnit`clearTestResults[]], 
          Enabled -> Dynamic[
            TrueQ[
             CurrentValue[
              ButtonNotebook[], {TaggingRules, "$testsRun"}]]], Evaluator -> 
          Automatic, FrameMargins -> {{10, 10}, {0, 0}}, 
          ImageSize -> {Automatic, 28}, Method -> "Queued"]}}, AutoDelete -> 
       False, BaseStyle -> {
        "DialogStyle", Bold, FontColor -> 
         RGBColor[
          0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`]}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, 
       GridBoxDividers -> {"Columns" -> {{False}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{1}}}], 
      "Grid"], ImageMargins -> {{5, 5}, {Automatic, Automatic}}], Appearance -> 
    FEPrivate`FrontEndResource["MUnitExpressions", "StaticToolbarNinePatch"], 
    FrameMargins -> {{26, 12}, {8, 12}}, ImageMargins -> -1]], "DockedCell", 
  CellFrameMargins -> 0, ShowCellTags -> False, CellTags -> 
  "MUnitStaticToolbar"],
TaggingRules->{"$testsRun" -> False},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 37, 0, 21, "VerificationTest"],
Cell[598, 22, 35, 0, 21, "ExpectedOutput"],
Cell[636, 24, 7710, 197, 38, "BottomCell"],
Cell[CellGroupData[{
Cell[8371, 225, 140, 2, 92, "Title",
 CellID->158602698],
Cell[CellGroupData[{
Cell[8536, 231, 132, 2, 64, "Section",
 CellID->608339359],
Cell[8671, 235, 102, 2, 44, "Subsection",
 CellID->189963346],
Cell[8776, 239, 327, 10, 61, "Subsection",
 CellID->1553256780]
}, Open  ]],
Cell[9118, 252, 105, 2, 64, "Section",
 CellID->775488528],
Cell[9226, 256, 134, 2, 50, "Section"],
Cell[9363, 260, 61, 1, 50, "Section"],
Cell[CellGroupData[{
Cell[9449, 265, 109, 1, 50, "Section"],
Cell[CellGroupData[{
Cell[9583, 270, 138, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[9746, 275, 11196, 227, 727, "WolframAlphaShortInput"],
Cell[20945, 504, 101, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21083, 511, 310, 9, 28, "Input"],
Cell[21396, 522, 500, 18, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21933, 545, 401, 12, 28, "Input"],
Cell[22337, 559, 14846, 255, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37220, 819, 311, 10, 49, "Input"],
Cell[37534, 831, 14820, 255, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52391, 1091, 58709, 1112, 700, "WolframAlphaShortInput"],
Cell[111103, 2205, 14820, 255, 238, "Output"]
}, Open  ]],
Cell[125938, 2463, 113, 2, 28, "Input"],
Cell[126054, 2467, 101, 1, 28, "Input"],
Cell[126158, 2470, 113, 2, 28, "Input"],
Cell[126274, 2474, 101, 1, 28, "Input"],
Cell[126378, 2477, 92, 1, 28, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[126519, 2484, 244, 3, 55, "Section"],
Cell[CellGroupData[{
Cell[126788, 2491, 136, 2, 44, "Subsection"],
Cell[CellGroupData[{
Cell[126949, 2497, 129, 1, 35, "Subsubsection"],
Cell[127081, 2500, 302, 6, 87, "Text"],
Cell[CellGroupData[{
Cell[127408, 2510, 117, 2, 28, "Input"],
Cell[127528, 2514, 70, 1, 28, "Output"]
}, {1, 2}]],
Cell[CellGroupData[{
Cell[127635, 2520, 333, 11, 28, "Input"],
Cell[127971, 2533, 14820, 255, 238, "Output"]
}, {1, 2}]],
Cell[142806, 2791, 139, 2, 46, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[142994, 2799, 88, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[143107, 2804, 482, 12, 96, "Input"],
Cell[143592, 2818, 502, 18, 64, "Output"]
}, {1, 2}]],
Cell[CellGroupData[{
Cell[144131, 2841, 302, 9, 49, "Input"],
Cell[144436, 2852, 14098, 243, 241, "Output"]
}, {1, 2}]],
Cell[CellGroupData[{
Cell[158571, 3100, 302, 9, 49, "Input"],
Cell[158876, 3111, 14822, 255, 272, "Output"]
}, {1, 2}]]
}, Closed]]
}, Open  ]],
Cell[173737, 3371, 138, 3, 64, "Section"],
Cell[CellGroupData[{
Cell[173900, 3378, 307, 9, 93, "Section"],
Cell[CellGroupData[{
Cell[174232, 3391, 294, 8, 40, "Input"],
Cell[174529, 3401, 117, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174683, 3408, 377, 11, 36, "Input"],
Cell[175063, 3421, 14819, 255, 238, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[189931, 3682, 85, 1, 64, "Section"],
Cell[190019, 3685, 93, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[190137, 3690, 2550, 79, 189, "Input"],
Cell[CellGroupData[{
Cell[192712, 3773, 398, 9, 37, "Print"],
Cell[193113, 3784, 555, 12, 21, "Print"],
Cell[193671, 3798, 557, 12, 21, "Print"],
Cell[194231, 3812, 591, 13, 21, "Print"],
Cell[194825, 3827, 591, 13, 21, "Print"],
Cell[195419, 3842, 591, 13, 21, "Print"],
Cell[196013, 3857, 591, 13, 21, "Print"],
Cell[196607, 3872, 589, 13, 21, "Print"],
Cell[197199, 3887, 583, 12, 23, "Print"],
Cell[197785, 3901, 579, 12, 23, "Print"],
Cell[198367, 3915, 586, 13, 23, "Print"],
Cell[198956, 3930, 586, 13, 23, "Print"],
Cell[199545, 3945, 579, 12, 23, "Print"],
Cell[200127, 3959, 575, 12, 23, "Print"],
Cell[200705, 3973, 579, 12, 23, "Print"],
Cell[201287, 3987, 575, 12, 23, "Print"],
Cell[201865, 4001, 579, 12, 23, "Print"],
Cell[202447, 4015, 571, 12, 23, "Print"],
Cell[203021, 4029, 571, 12, 23, "Print"],
Cell[203595, 4043, 573, 12, 23, "Print"],
Cell[204171, 4057, 573, 12, 23, "Print"],
Cell[204747, 4071, 569, 12, 23, "Print"],
Cell[205319, 4085, 571, 12, 23, "Print"],
Cell[205893, 4099, 569, 12, 23, "Print"],
Cell[206465, 4113, 566, 12, 23, "Print"],
Cell[207034, 4127, 567, 12, 23, "Print"],
Cell[207604, 4141, 563, 12, 23, "Print"],
Cell[208170, 4155, 565, 12, 23, "Print"],
Cell[208738, 4169, 515, 12, 23, "Print"],
Cell[209256, 4183, 512, 12, 23, "Print"],
Cell[209771, 4197, 513, 12, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[210333, 4215, 96, 1, 28, "Input"],
Cell[210432, 4218, 73, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210542, 4224, 96, 1, 28, "Input"],
Cell[210641, 4227, 74, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210752, 4233, 146, 3, 28, "Input"],
Cell[210901, 4238, 215, 3, 46, "Output"]
}, Open  ]]
}, Open  ]],
Cell[211143, 4245, 85, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[211253, 4250, 133, 2, 50, "Section"],
Cell[211389, 4254, 94, 1, 28, "Input"],
Cell[211486, 4257, 122, 3, 28, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
